# This workflow will build a docker container, publish it to Google Container
# Registry, and deploy it to GKE when there is a push to the "main"
# branch.
#
# To configure this workflow:
#
# 1. Enable the following Google Cloud APIs:
#
#    - Artifact Registry (artifactregistry.googleapis.com)
#    - Google Kubernetes Engine (container.googleapis.com)
#    - IAM Credentials API (iamcredentials.googleapis.com)
#
#    You can learn more about enabling APIs at
#    https://support.google.com/googleapi/answer/6158841.
#
# 2. Ensure that your repository contains the necessary configuration for your
#    Google Kubernetes Engine cluster, including deployment.yml,
#    kustomization.yml, service.yml, etc.
#
# 3. Create and configure a Workload Identity Provider for GitHub:
#    https://github.com/google-github-actions/auth#preferred-direct-workload-identity-federation.
#
#    Depending on how you authenticate, you will need to grant an IAM principal
#    permissions on Google Cloud:
#
#    - Artifact Registry Administrator (roles/artifactregistry.admin)
#    - Kubernetes Engine Developer (roles/container.developer)
#
#    You can learn more about setting IAM permissions at
#    https://cloud.google.com/iam/docs/manage-access-other-resources
#
# 5. Change the values in the "env" block to match your values.
name: 'Build and Deploy to GKE'
on:
  push:
    branches:
      - main
env:
  REPOSITORY: 'githut-action' # TODO: update to your Artifact Registry docker repository name
  IMAGE: 'restfulapp'

jobs:
  setup-build-publish-deploy:
    name: 'Setup, Build, Publish, and Deploy'
    runs-on: 'ubuntu-latest'
    environment: 'production'

    permissions:
      contents: 'read'
      id-token: 'write'

    steps:
      - name: 'Checkout'
        uses: 'actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332' # actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven

      - name: Run mvn clean install
        working-directory: RestfulApp
        run: mvn clean install -B

      - uses: actions/checkout@v4

      - name: Authenticate to GCP via Workload Identity Federation
        uses: google-github-actions/auth@v2
        with:
          #project_id: ${{ secrets.PROJECT_ID }}
          token_format: 'access_token'
          workload_identity_provider: ${{ secrets.WORKLOAD_IDENTITY_PROVIDER }}
          service_account: ${{ secrets.GSA }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Configure Docker auth for Artifact Registry
        run: |
          gcloud auth configure-docker ${{ secrets.REGION }}-docker.pkg.dev --quiet

      # Build the Docker image
      - name: 'Build and push Docker container'
        uses: docker/build-push-action@v3
        with:
          context: RestfulApp
          file: RestfulApp/Docker
          tags: ${{ secrets.REGION }}-docker.pkg.dev/${{ secrets.PROJECT_ID }}/${{ env.REPOSITORY }}/restfulapp:latest
          push: true  # change to true for pushing

      # Helm linting of your chart
      - name: Lint Helm chart
        working-directory: Helm
        run: helm lint . --strict

      - name: Package Helm chart
        working-directory: Helm
        run: helm package .

      - name: Push Helm chart to GAR
        run: |
          helm push Helm/restfulapp-helm-v01.tgz \
            oci://${{ secrets.REGION }}-docker.pkg.dev/${{ secrets.PROJECT_ID }}/${{ env.REPOSITORY }}
          
      - name: Install Cloud SDK + auth plugin
        uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: ${{ secrets.PROJECT_ID }}
          install_components: gke-gcloud-auth-plugin  # ensures up‑to‑date auth tooling

      - name: Get GKE credentials
        uses: google-github-actions/get-gke-credentials@v2
        with:
          cluster_name: ${{ secrets.CLUSTER_NAME }}
          location: ${{ secrets.ZONE }}

      - name: Helm upgrade/install
        run: |
            helm upgrade --install restful-app Helm/restfulapp-helm-v01.tgz \
              --namespace dev --create-namespace \
              --set image= ${{ secrets.REGION }}-docker.pkg.dev/${{ secrets.PROJECT_ID }}/${{ env.REPOSITORY }}/restfulapp:latest